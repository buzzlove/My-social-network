{"version":3,"sources":["components/html_components/Dialogs/dialogs.module.css","components/html_components/Dialogs/MessagesForm/MessagesForm.jsx","components/html_components/Dialogs/Messages/Messages.jsx","components/html_components/Dialogs/Messages/MessagesContainer.jsx","components/html_components/Dialogs/Users/Users.jsx","components/html_components/Dialogs/Users/UsersContainer.jsx","components/html_components/Dialogs/dialogs.jsx"],"names":["module","exports","MaxLength100","maxLengthCreator","ReduxMessagesForm","reduxForm","form","props","onSubmit","handleSubmit","Field","validate","required","name","placeholder","component","Textarea","Messages","NewMessagesData","DialogsPage","MessagesOld","map","message","isAuth","to","className","classes","messages","formData","addMassage","AddMessage","userList","compose","connect","state","auth","WithAuthRedirect","Users","UserData","User","dialog","id","users","Dialogs","main","UsersContainer","MessagesContainer"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,SAAW,0BAA0B,MAAQ,uBAAuB,SAAW,4B,gICKxHC,EAAeC,YAAiB,IAevBC,EADWC,YAAU,CAACC,KAAM,YAAjBD,EAZL,SAACE,GAElB,OACI,0BAAMC,SAAUD,EAAME,cAClB,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAUV,GAAeW,KAAK,aAAaC,YAAY,oGAAoBC,UAAWC,MACxG,6BACI,yFCUDC,EAnBE,SAACV,GAEd,IAAIW,EAAkBX,EAAMY,YAAYC,YAAYC,KAAI,SAAAC,GAAO,OAAI,8BAAOA,EAAQA,YAMlF,OAAqB,IAAjBf,EAAMgB,OAAyB,kBAAC,IAAD,CAAUC,GAAI,wEAE7C,yBAAKC,UAAWC,IAAQC,UACpB,kBAAC,EAAD,CAAmBnB,SARV,SAACoB,GACdrB,EAAMsB,WAAWD,EAASE,eAQtB,yBAAKL,UAAWC,IAAQK,UACnBb,K,uBCLFc,cAAQC,aAPD,SAACC,GACnB,MAAO,CACHf,YAAae,EAAMf,YACnBI,OAAQW,EAAMC,KAAKZ,UAIsB,CAACM,iBAC9CO,IADWJ,CACOf,G,QCCPoB,EAXD,SAAC9B,GAEf,IAAI+B,EAAW/B,EAAMgC,KAAKlB,KAAI,SAAAmB,GAAM,OAAI,2BAAG,kBAAC,IAAD,CAAShB,GAAI,2DAAgBgB,EAAOC,IAAKD,EAAO3B,UAEvF,OACI,yBAAKY,UAAWC,IAAQgB,OACnBJ,ICAEL,eAPO,SAACC,GACnB,MAAO,CACHK,KAAML,EAAMf,YAAYoB,KACxBhB,OAAQW,EAAMC,KAAKZ,UAIZU,CAA0BI,GCG1BM,UARC,WACf,OACO,yBAAKlB,UAAWC,IAAQkB,MACpB,kBAACC,EAAD,MACA,kBAACC,EAAD","file":"static/js/4.e4db1563.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"dialogs_main__yOHTL\",\"messages\":\"dialogs_messages__yupax\",\"users\":\"dialogs_users__3Wr_s\",\"userList\":\"dialogs_userList__1_Iah\"};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nimport {maxLengthCreator, required} from \"../../Utilits/Validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControl/FormsControl\";\r\n\r\nconst MaxLength100 = maxLengthCreator(30)\r\n\r\nconst MessagesForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required, MaxLength100]} name='AddMessage' placeholder='Введите сообщение' component={Textarea}/>\r\n            <div>\r\n                <button>Добавить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxMessagesForm = reduxForm({form: 'Messages'})(MessagesForm)\r\nexport default ReduxMessagesForm;","import React from \"react\";\r\nimport classes from \"../dialogs.module.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ReduxMessagesForm from \"../MessagesForm/MessagesForm\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    let NewMessagesData = props.DialogsPage.MessagesOld.map(message => <span>{message.message}</span>);\r\n    const onSubmit = (formData) => {\r\n        props.addMassage(formData.AddMessage)\r\n\r\n    }\r\n\r\n    if (props.isAuth === false) return <Redirect to={'/Авторизация'}/>\r\n    return (\r\n        <div className={classes.messages}>\r\n            <ReduxMessagesForm onSubmit={onSubmit}/>\r\n            <div className={classes.userList}>\r\n                {NewMessagesData}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Messages;","import {addMassage} from \"../../../../Redux/dialogReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsPage: state.DialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(connect (mapStateToProps, {addMassage}),\r\n    WithAuthRedirect)(Messages);","import React from 'react';\r\nimport classes from \"../dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Users = (props) => {\r\n\r\nlet UserData = props.User.map(dialog => <p><NavLink to={\"/Сообщения/\" + dialog.id}>{dialog.name}</NavLink></p> );\r\n\r\n    return (\r\n        <div className={classes.users}>\r\n            {UserData}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        User: state.DialogsPage.User,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default connect (mapStateToProps)(Users);","import React from 'react';\r\nimport classes from './dialogs.module.css';\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\n\r\nconst Dialogs = () => {\r\n return (\r\n        <div className={classes.main}>\r\n            <UsersContainer    />\r\n            <MessagesContainer />\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;"],"sourceRoot":""}